{"ast":null,"code":"import api from './api.config';\nexport const financialService = {\n  // Income Management\n  getAllIncome: async (filters = {}) => {\n    const response = await api.get('/income', {\n      params: filters\n    });\n    return response.data;\n  },\n  createIncome: async incomeData => {\n    const response = await api.post('/income', incomeData);\n    return response.data;\n  },\n  updateIncome: async (incomeId, incomeData) => {\n    const response = await api.put(`/income/${incomeId}`, incomeData);\n    return response.data;\n  },\n  deleteIncome: async incomeId => {\n    const response = await api.delete(`/income/${incomeId}`);\n    return response.data;\n  },\n  // Expense Categories\n  getAllCategories: async () => {\n    const response = await api.get('/expense-categories');\n    return response.data;\n  },\n  createCategory: async categoryData => {\n    const response = await api.post('/expense-categories', categoryData);\n    return response.data;\n  },\n  updateCategory: async (categoryId, categoryData) => {\n    const response = await api.put(`/expense-categories/${categoryId}`, categoryData);\n    return response.data;\n  },\n  deleteCategory: async categoryId => {\n    const response = await api.delete(`/expense-categories/${categoryId}`);\n    return response.data;\n  },\n  // Expenses\n  getAllExpenses: async (filters = {}) => {\n    const response = await api.get('/expenses', {\n      params: filters\n    });\n    return response.data;\n  },\n  createExpense: async expenseData => {\n    const response = await api.post('/expenses', expenseData);\n    return response.data;\n  },\n  updateExpense: async (expenseId, expenseData) => {\n    const response = await api.put(`/expenses/${expenseId}`, expenseData);\n    return response.data;\n  },\n  deleteExpense: async expenseId => {\n    const response = await api.delete(`/expenses/${expenseId}`);\n    return response.data;\n  },\n  // Budgets\n  getAllBudgets: async (filters = {}) => {\n    const response = await api.get('/budgets', {\n      params: filters\n    });\n    return response.data;\n  },\n  createBudget: async budgetData => {\n    const response = await api.post('/budgets', budgetData);\n    return response.data;\n  },\n  updateBudget: async (budgetId, budgetData) => {\n    const response = await api.put(`/budgets/${budgetId}`, budgetData);\n    return response.data;\n  },\n  deleteBudget: async budgetId => {\n    const response = await api.delete(`/budgets/${budgetId}`);\n    return response.data;\n  },\n  // Financial Summary\n  getFinancialSummary: async (filters = {}) => {\n    const response = await api.get('/financial-summary', {\n      params: filters\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","financialService","getAllIncome","filters","response","get","params","data","createIncome","incomeData","post","updateIncome","incomeId","put","deleteIncome","delete","getAllCategories","createCategory","categoryData","updateCategory","categoryId","deleteCategory","getAllExpenses","createExpense","expenseData","updateExpense","expenseId","deleteExpense","getAllBudgets","createBudget","budgetData","updateBudget","budgetId","deleteBudget","getFinancialSummary"],"sources":["C:/Users/JOSEPH/Desktop/allan/web programming/web/src/services/financialService.js"],"sourcesContent":["import api from './api.config';\r\n\r\nexport const financialService = {\r\n  // Income Management\r\n  getAllIncome: async (filters = {}) => {\r\n    const response = await api.get('/income', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  createIncome: async (incomeData) => {\r\n    const response = await api.post('/income', incomeData);\r\n    return response.data;\r\n  },\r\n\r\n  updateIncome: async (incomeId, incomeData) => {\r\n    const response = await api.put(`/income/${incomeId}`, incomeData);\r\n    return response.data;\r\n  },\r\n\r\n  deleteIncome: async (incomeId) => {\r\n    const response = await api.delete(`/income/${incomeId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Expense Categories\r\n  getAllCategories: async () => {\r\n    const response = await api.get('/expense-categories');\r\n    return response.data;\r\n  },\r\n\r\n  createCategory: async (categoryData) => {\r\n    const response = await api.post('/expense-categories', categoryData);\r\n    return response.data;\r\n  },\r\n\r\n  updateCategory: async (categoryId, categoryData) => {\r\n    const response = await api.put(`/expense-categories/${categoryId}`, categoryData);\r\n    return response.data;\r\n  },\r\n\r\n  deleteCategory: async (categoryId) => {\r\n    const response = await api.delete(`/expense-categories/${categoryId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Expenses\r\n  getAllExpenses: async (filters = {}) => {\r\n    const response = await api.get('/expenses', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  createExpense: async (expenseData) => {\r\n    const response = await api.post('/expenses', expenseData);\r\n    return response.data;\r\n  },\r\n\r\n  updateExpense: async (expenseId, expenseData) => {\r\n    const response = await api.put(`/expenses/${expenseId}`, expenseData);\r\n    return response.data;\r\n  },\r\n\r\n  deleteExpense: async (expenseId) => {\r\n    const response = await api.delete(`/expenses/${expenseId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Budgets\r\n  getAllBudgets: async (filters = {}) => {\r\n    const response = await api.get('/budgets', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  createBudget: async (budgetData) => {\r\n    const response = await api.post('/budgets', budgetData);\r\n    return response.data;\r\n  },\r\n\r\n  updateBudget: async (budgetId, budgetData) => {\r\n    const response = await api.put(`/budgets/${budgetId}`, budgetData);\r\n    return response.data;\r\n  },\r\n\r\n  deleteBudget: async (budgetId) => {\r\n    const response = await api.delete(`/budgets/${budgetId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Financial Summary\r\n  getFinancialSummary: async (filters = {}) => {\r\n    const response = await api.get('/financial-summary', { params: filters });\r\n    return response.data;\r\n  }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}