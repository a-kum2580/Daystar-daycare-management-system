{"ast":null,"code":"import api from './api.config';\nconst settingsService = {\n  getSettings: async () => {\n    try {\n      const response = await api.get('/settings');\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n        message: 'Failed to fetch settings'\n      };\n    }\n  },\n  updateSettings: async settingsData => {\n    try {\n      const response = await api.put('/settings', settingsData);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n        message: 'Failed to update settings'\n      };\n    }\n  },\n  getNotificationSettings: async () => {\n    try {\n      const response = await api.get('/settings/notifications');\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n        message: 'Failed to fetch notification settings'\n      };\n    }\n  },\n  updateNotificationSettings: async notificationSettings => {\n    try {\n      const response = await api.put('/settings/notifications', notificationSettings);\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || {\n        message: 'Failed to update notification settings'\n      };\n    }\n  },\n  getEmailSettings: async () => {\n    try {\n      const response = await api.get('/settings/email');\n      return response.data;\n    } catch (error) {\n      var _error$response5;\n      throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || {\n        message: 'Failed to fetch email settings'\n      };\n    }\n  },\n  updateEmailSettings: async emailSettings => {\n    try {\n      const response = await api.put('/settings/email', emailSettings);\n      return response.data;\n    } catch (error) {\n      var _error$response6;\n      throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || {\n        message: 'Failed to update email settings'\n      };\n    }\n  },\n  getBackupSettings: async () => {\n    try {\n      const response = await api.get('/settings/backup');\n      return response.data;\n    } catch (error) {\n      var _error$response7;\n      throw ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || {\n        message: 'Failed to fetch backup settings'\n      };\n    }\n  },\n  updateBackupSettings: async backupSettings => {\n    try {\n      const response = await api.put('/settings/backup', backupSettings);\n      return response.data;\n    } catch (error) {\n      var _error$response8;\n      throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || {\n        message: 'Failed to update backup settings'\n      };\n    }\n  },\n  createBackup: async () => {\n    try {\n      const response = await api.post('/settings/backup');\n      return response.data;\n    } catch (error) {\n      var _error$response9;\n      throw ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || {\n        message: 'Failed to create backup'\n      };\n    }\n  },\n  restoreBackup: async backupId => {\n    try {\n      const response = await api.post(`/settings/backup/${backupId}/restore`);\n      return response.data;\n    } catch (error) {\n      var _error$response10;\n      throw ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || {\n        message: 'Failed to restore backup'\n      };\n    }\n  }\n};\nexport default settingsService;","map":{"version":3,"names":["api","settingsService","getSettings","response","get","data","error","_error$response","message","updateSettings","settingsData","put","_error$response2","getNotificationSettings","_error$response3","updateNotificationSettings","notificationSettings","_error$response4","getEmailSettings","_error$response5","updateEmailSettings","emailSettings","_error$response6","getBackupSettings","_error$response7","updateBackupSettings","backupSettings","_error$response8","createBackup","post","_error$response9","restoreBackup","backupId","_error$response10"],"sources":["C:/Users/JOSEPH/Desktop/allan/web programming/web/src/services/settingsService.js"],"sourcesContent":["import api from './api.config';\r\n\r\nconst settingsService = {\r\n  getSettings: async () => {\r\n    try {\r\n      const response = await api.get('/settings');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to fetch settings' };\r\n    }\r\n  },\r\n\r\n  updateSettings: async (settingsData) => {\r\n    try {\r\n      const response = await api.put('/settings', settingsData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to update settings' };\r\n    }\r\n  },\r\n\r\n  getNotificationSettings: async () => {\r\n    try {\r\n      const response = await api.get('/settings/notifications');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to fetch notification settings' };\r\n    }\r\n  },\r\n\r\n  updateNotificationSettings: async (notificationSettings) => {\r\n    try {\r\n      const response = await api.put('/settings/notifications', notificationSettings);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to update notification settings' };\r\n    }\r\n  },\r\n\r\n  getEmailSettings: async () => {\r\n    try {\r\n      const response = await api.get('/settings/email');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to fetch email settings' };\r\n    }\r\n  },\r\n\r\n  updateEmailSettings: async (emailSettings) => {\r\n    try {\r\n      const response = await api.put('/settings/email', emailSettings);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to update email settings' };\r\n    }\r\n  },\r\n\r\n  getBackupSettings: async () => {\r\n    try {\r\n      const response = await api.get('/settings/backup');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to fetch backup settings' };\r\n    }\r\n  },\r\n\r\n  updateBackupSettings: async (backupSettings) => {\r\n    try {\r\n      const response = await api.put('/settings/backup', backupSettings);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to update backup settings' };\r\n    }\r\n  },\r\n\r\n  createBackup: async () => {\r\n    try {\r\n      const response = await api.post('/settings/backup');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to create backup' };\r\n    }\r\n  },\r\n\r\n  restoreBackup: async (backupId) => {\r\n    try {\r\n      const response = await api.post(`/settings/backup/${backupId}/restore`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to restore backup' };\r\n    }\r\n  }\r\n};\r\n\r\nexport default settingsService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}