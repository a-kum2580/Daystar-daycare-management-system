{"ast":null,"code":"import { defaultDateLib } from \"./DateLib.js\";\n/**\n * Represent the day displayed in the calendar.\n *\n * In DayPicker, a `Day` is a `Date` that can be displayed in the calendar. It\n * is used as extension of the native `Date` object to provide additional\n * information about the day.\n */\nexport class CalendarDay {\n  constructor(date, displayMonth, dateLib = defaultDateLib) {\n    this.date = date;\n    this.displayMonth = displayMonth;\n    this.outside = Boolean(displayMonth && !dateLib.isSameMonth(date, displayMonth));\n    this.dateLib = dateLib;\n  }\n  /**\n   * Check if the day is the same as the given day: considering if it is in the\n   * same display month.\n   */\n  isEqualTo(day) {\n    return this.dateLib.isSameDay(day.date, this.date) && this.dateLib.isSameMonth(day.displayMonth, this.displayMonth);\n  }\n}","map":{"version":3,"names":["defaultDateLib","CalendarDay","constructor","date","displayMonth","dateLib","outside","Boolean","isSameMonth","isEqualTo","day","isSameDay"],"sources":["C:\\Users\\JOSEPH\\Desktop\\web\\node_modules\\react-day-picker\\src\\classes\\CalendarDay.ts"],"sourcesContent":["import { type DateLib, defaultDateLib } from \"./DateLib.js\";\n\n/**\n * Represent the day displayed in the calendar.\n *\n * In DayPicker, a `Day` is a `Date` that can be displayed in the calendar. It\n * is used as extension of the native `Date` object to provide additional\n * information about the day.\n */\nexport class CalendarDay {\n  constructor(\n    date: Date,\n    displayMonth: Date,\n    dateLib: DateLib = defaultDateLib\n  ) {\n    this.date = date;\n    this.displayMonth = displayMonth;\n    this.outside = Boolean(\n      displayMonth && !dateLib.isSameMonth(date, displayMonth)\n    );\n    this.dateLib = dateLib;\n  }\n\n  /**\n   * The utility functions to manipulate dates.\n   *\n   * @private\n   */\n  readonly dateLib: DateLib;\n\n  /**\n   * Whether the day is not belonging to the displayed month.\n   *\n   * When `outside` is `true`, use `displayMonth` to know to which month the day\n   * belongs.\n   */\n  readonly outside: boolean;\n\n  /**\n   * The months where the day is displayed.\n   *\n   * In DayPicker, days can fall out the displayed months (e.g. when\n   * `showOutsideDays` is `true`). This property is useful to know if the day is\n   * in the same month of the displayed month.\n   */\n  readonly displayMonth: Date;\n\n  /** The date represented by this day. */\n  readonly date: Date;\n\n  /**\n   * Check if the day is the same as the given day: considering if it is in the\n   * same display month.\n   */\n  isEqualTo(day: CalendarDay) {\n    return (\n      this.dateLib.isSameDay(day.date, this.date) &&\n      this.dateLib.isSameMonth(day.displayMonth, this.displayMonth)\n    );\n  }\n}\n"],"mappings":"AAAA,SAAuBA,cAAc,QAAQ,cAAc;AAE3D;;;;;;;AAOA,OAAM,MAAOC,WAAW;EACtBC,YACEC,IAAU,EACVC,YAAkB,EAClBC,OAAA,GAAmBL,cAAc;IAEjC,IAAI,CAACG,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACE,OAAO,GAAGC,OAAO,CACpBH,YAAY,IAAI,CAACC,OAAO,CAACG,WAAW,CAACL,IAAI,EAAEC,YAAY,CAAC,CACzD;IACD,IAAI,CAACC,OAAO,GAAGA,OAAO;EACxB;EA6BA;;;;EAIAI,SAASA,CAACC,GAAgB;IACxB,OACE,IAAI,CAACL,OAAO,CAACM,SAAS,CAACD,GAAG,CAACP,IAAI,EAAE,IAAI,CAACA,IAAI,CAAC,IAC3C,IAAI,CAACE,OAAO,CAACG,WAAW,CAACE,GAAG,CAACN,YAAY,EAAE,IAAI,CAACA,YAAY,CAAC;EAEjE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}