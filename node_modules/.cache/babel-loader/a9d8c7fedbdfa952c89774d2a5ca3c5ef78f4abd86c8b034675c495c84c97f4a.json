{"ast":null,"code":"import { useState } from \"react\";\nimport { calculateFocusTarget } from \"./helpers/calculateFocusTarget.js\";\nimport { getNextFocus } from \"./helpers/getNextFocus.js\";\n/** @private */\nexport function useFocus(props, calendar, getModifiers, isSelected, dateLib) {\n  const {\n    autoFocus\n  } = props;\n  const [lastFocused, setLastFocused] = useState();\n  const focusTarget = calculateFocusTarget(calendar.days, getModifiers, isSelected || (() => false), lastFocused);\n  const [focusedDay, setFocused] = useState(autoFocus ? focusTarget : undefined);\n  const blur = () => {\n    setLastFocused(focusedDay);\n    setFocused(undefined);\n  };\n  const moveFocus = (moveBy, moveDir) => {\n    if (!focusedDay) return;\n    const nextFocus = getNextFocus(moveBy, moveDir, focusedDay, calendar.navStart, calendar.navEnd, props, dateLib);\n    if (!nextFocus) return;\n    calendar.goToDay(nextFocus);\n    setFocused(nextFocus);\n  };\n  const isFocusTarget = day => {\n    return Boolean(focusTarget?.isEqualTo(day));\n  };\n  const useFocus = {\n    isFocusTarget,\n    setFocused,\n    focused: focusedDay,\n    blur,\n    moveFocus\n  };\n  return useFocus;\n}","map":{"version":3,"names":["useState","calculateFocusTarget","getNextFocus","useFocus","props","calendar","getModifiers","isSelected","dateLib","autoFocus","lastFocused","setLastFocused","focusTarget","days","focusedDay","setFocused","undefined","blur","moveFocus","moveBy","moveDir","nextFocus","navStart","navEnd","goToDay","isFocusTarget","day","Boolean","isEqualTo","focused"],"sources":["C:/Users/JOSEPH/Desktop/web/node_modules/react-day-picker/dist/esm/useFocus.js"],"sourcesContent":["import { useState } from \"react\";\nimport { calculateFocusTarget } from \"./helpers/calculateFocusTarget.js\";\nimport { getNextFocus } from \"./helpers/getNextFocus.js\";\n/** @private */\nexport function useFocus(props, calendar, getModifiers, isSelected, dateLib) {\n    const { autoFocus } = props;\n    const [lastFocused, setLastFocused] = useState();\n    const focusTarget = calculateFocusTarget(calendar.days, getModifiers, isSelected || (() => false), lastFocused);\n    const [focusedDay, setFocused] = useState(autoFocus ? focusTarget : undefined);\n    const blur = () => {\n        setLastFocused(focusedDay);\n        setFocused(undefined);\n    };\n    const moveFocus = (moveBy, moveDir) => {\n        if (!focusedDay)\n            return;\n        const nextFocus = getNextFocus(moveBy, moveDir, focusedDay, calendar.navStart, calendar.navEnd, props, dateLib);\n        if (!nextFocus)\n            return;\n        calendar.goToDay(nextFocus);\n        setFocused(nextFocus);\n    };\n    const isFocusTarget = (day) => {\n        return Boolean(focusTarget?.isEqualTo(day));\n    };\n    const useFocus = {\n        isFocusTarget,\n        setFocused,\n        focused: focusedDay,\n        blur,\n        moveFocus\n    };\n    return useFocus;\n}\n//# sourceMappingURL=useFocus.js.map"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,oBAAoB,QAAQ,mCAAmC;AACxE,SAASC,YAAY,QAAQ,2BAA2B;AACxD;AACA,OAAO,SAASC,QAAQA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,UAAU,EAAEC,OAAO,EAAE;EACzE,MAAM;IAAEC;EAAU,CAAC,GAAGL,KAAK;EAC3B,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAChD,MAAMY,WAAW,GAAGX,oBAAoB,CAACI,QAAQ,CAACQ,IAAI,EAAEP,YAAY,EAAEC,UAAU,KAAK,MAAM,KAAK,CAAC,EAAEG,WAAW,CAAC;EAC/G,MAAM,CAACI,UAAU,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAACS,SAAS,GAAGG,WAAW,GAAGI,SAAS,CAAC;EAC9E,MAAMC,IAAI,GAAGA,CAAA,KAAM;IACfN,cAAc,CAACG,UAAU,CAAC;IAC1BC,UAAU,CAACC,SAAS,CAAC;EACzB,CAAC;EACD,MAAME,SAAS,GAAGA,CAACC,MAAM,EAAEC,OAAO,KAAK;IACnC,IAAI,CAACN,UAAU,EACX;IACJ,MAAMO,SAAS,GAAGnB,YAAY,CAACiB,MAAM,EAAEC,OAAO,EAAEN,UAAU,EAAET,QAAQ,CAACiB,QAAQ,EAAEjB,QAAQ,CAACkB,MAAM,EAAEnB,KAAK,EAAEI,OAAO,CAAC;IAC/G,IAAI,CAACa,SAAS,EACV;IACJhB,QAAQ,CAACmB,OAAO,CAACH,SAAS,CAAC;IAC3BN,UAAU,CAACM,SAAS,CAAC;EACzB,CAAC;EACD,MAAMI,aAAa,GAAIC,GAAG,IAAK;IAC3B,OAAOC,OAAO,CAACf,WAAW,EAAEgB,SAAS,CAACF,GAAG,CAAC,CAAC;EAC/C,CAAC;EACD,MAAMvB,QAAQ,GAAG;IACbsB,aAAa;IACbV,UAAU;IACVc,OAAO,EAAEf,UAAU;IACnBG,IAAI;IACJC;EACJ,CAAC;EACD,OAAOf,QAAQ;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}