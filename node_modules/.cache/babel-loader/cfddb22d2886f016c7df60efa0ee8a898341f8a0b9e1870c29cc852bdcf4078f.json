{"ast":null,"code":"import { CalendarDay } from \"../classes/index.js\";\nimport { dateMatchModifiers } from \"../utils/dateMatchModifiers.js\";\nimport { getFocusableDate } from \"./getFocusableDate.js\";\nexport function getNextFocus(moveBy, moveDir, /** The date that is currently focused. */\nrefDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt = 0) {\n  if (attempt > 365) {\n    // Limit the recursion to 365 attempts\n    return undefined;\n  }\n  const focusableDate = getFocusableDate(moveBy, moveDir, refDay.date,\n  // should be refDay? or refDay.date?\n  calendarStartMonth, calendarEndMonth, props, dateLib);\n  const isDisabled = Boolean(props.disabled && dateMatchModifiers(focusableDate, props.disabled, dateLib));\n  const isHidden = Boolean(props.hidden && dateMatchModifiers(focusableDate, props.hidden, dateLib));\n  const targetMonth = focusableDate;\n  const focusDay = new CalendarDay(focusableDate, targetMonth, dateLib);\n  if (!isDisabled && !isHidden) {\n    return focusDay;\n  }\n  // Recursively attempt to find the next focusable date\n  return getNextFocus(moveBy, moveDir, focusDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt + 1);\n}","map":{"version":3,"names":["CalendarDay","dateMatchModifiers","getFocusableDate","getNextFocus","moveBy","moveDir","refDay","calendarStartMonth","calendarEndMonth","props","dateLib","attempt","undefined","focusableDate","date","isDisabled","Boolean","disabled","isHidden","hidden","targetMonth","focusDay"],"sources":["C:/Users/JOSEPH/Desktop/web/node_modules/react-day-picker/dist/esm/helpers/getNextFocus.js"],"sourcesContent":["import { CalendarDay } from \"../classes/index.js\";\nimport { dateMatchModifiers } from \"../utils/dateMatchModifiers.js\";\nimport { getFocusableDate } from \"./getFocusableDate.js\";\nexport function getNextFocus(moveBy, moveDir, \n/** The date that is currently focused. */\nrefDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt = 0) {\n    if (attempt > 365) {\n        // Limit the recursion to 365 attempts\n        return undefined;\n    }\n    const focusableDate = getFocusableDate(moveBy, moveDir, refDay.date, // should be refDay? or refDay.date?\n    calendarStartMonth, calendarEndMonth, props, dateLib);\n    const isDisabled = Boolean(props.disabled && dateMatchModifiers(focusableDate, props.disabled, dateLib));\n    const isHidden = Boolean(props.hidden && dateMatchModifiers(focusableDate, props.hidden, dateLib));\n    const targetMonth = focusableDate;\n    const focusDay = new CalendarDay(focusableDate, targetMonth, dateLib);\n    if (!isDisabled && !isHidden) {\n        return focusDay;\n    }\n    // Recursively attempt to find the next focusable date\n    return getNextFocus(moveBy, moveDir, focusDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt + 1);\n}\n//# sourceMappingURL=getNextFocus.js.map"],"mappings":"AAAA,SAASA,WAAW,QAAQ,qBAAqB;AACjD,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,OAAO,SAASC,YAAYA,CAACC,MAAM,EAAEC,OAAO,EAC5C;AACAC,MAAM,EAAEC,kBAAkB,EAAEC,gBAAgB,EAAEC,KAAK,EAAEC,OAAO,EAAEC,OAAO,GAAG,CAAC,EAAE;EACvE,IAAIA,OAAO,GAAG,GAAG,EAAE;IACf;IACA,OAAOC,SAAS;EACpB;EACA,MAAMC,aAAa,GAAGX,gBAAgB,CAACE,MAAM,EAAEC,OAAO,EAAEC,MAAM,CAACQ,IAAI;EAAE;EACrEP,kBAAkB,EAAEC,gBAAgB,EAAEC,KAAK,EAAEC,OAAO,CAAC;EACrD,MAAMK,UAAU,GAAGC,OAAO,CAACP,KAAK,CAACQ,QAAQ,IAAIhB,kBAAkB,CAACY,aAAa,EAAEJ,KAAK,CAACQ,QAAQ,EAAEP,OAAO,CAAC,CAAC;EACxG,MAAMQ,QAAQ,GAAGF,OAAO,CAACP,KAAK,CAACU,MAAM,IAAIlB,kBAAkB,CAACY,aAAa,EAAEJ,KAAK,CAACU,MAAM,EAAET,OAAO,CAAC,CAAC;EAClG,MAAMU,WAAW,GAAGP,aAAa;EACjC,MAAMQ,QAAQ,GAAG,IAAIrB,WAAW,CAACa,aAAa,EAAEO,WAAW,EAAEV,OAAO,CAAC;EACrE,IAAI,CAACK,UAAU,IAAI,CAACG,QAAQ,EAAE;IAC1B,OAAOG,QAAQ;EACnB;EACA;EACA,OAAOlB,YAAY,CAACC,MAAM,EAAEC,OAAO,EAAEgB,QAAQ,EAAEd,kBAAkB,EAAEC,gBAAgB,EAAEC,KAAK,EAAEC,OAAO,EAAEC,OAAO,GAAG,CAAC,CAAC;AACrH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}