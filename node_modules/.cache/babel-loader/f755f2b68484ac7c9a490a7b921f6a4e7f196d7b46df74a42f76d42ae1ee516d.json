{"ast":null,"code":"import { defaultDateLib } from \"../classes/index.js\";\n/**\n * Determines whether a given date is inside a specified date range.\n *\n * @since 9.0.0\n * @group Utilities\n */\nexport function rangeIncludesDate(range, date, /** If `true`, the ends of the range are excluded. */\nexcludeEnds = false, dateLib = defaultDateLib) {\n  let {\n    from,\n    to\n  } = range;\n  const {\n    differenceInCalendarDays,\n    isSameDay\n  } = dateLib;\n  if (from && to) {\n    const isRangeInverted = differenceInCalendarDays(to, from) < 0;\n    if (isRangeInverted) {\n      [from, to] = [to, from];\n    }\n    const isInRange = differenceInCalendarDays(date, from) >= (excludeEnds ? 1 : 0) && differenceInCalendarDays(to, date) >= (excludeEnds ? 1 : 0);\n    return isInRange;\n  }\n  if (!excludeEnds && to) {\n    return isSameDay(to, date);\n  }\n  if (!excludeEnds && from) {\n    return isSameDay(from, date);\n  }\n  return false;\n}\n/**\n * @private\n * @deprecated Use {@link rangeIncludesDate} instead.\n */\nexport const isDateInRange = (range, date) => rangeIncludesDate(range, date, false, defaultDateLib);","map":{"version":3,"names":["defaultDateLib","rangeIncludesDate","range","date","excludeEnds","dateLib","from","to","differenceInCalendarDays","isSameDay","isRangeInverted","isInRange","isDateInRange"],"sources":["C:/Users/JOSEPH/Desktop/web/node_modules/react-day-picker/dist/esm/utils/rangeIncludesDate.js"],"sourcesContent":["import { defaultDateLib } from \"../classes/index.js\";\n/**\n * Determines whether a given date is inside a specified date range.\n *\n * @since 9.0.0\n * @group Utilities\n */\nexport function rangeIncludesDate(range, date, \n/** If `true`, the ends of the range are excluded. */\nexcludeEnds = false, dateLib = defaultDateLib) {\n    let { from, to } = range;\n    const { differenceInCalendarDays, isSameDay } = dateLib;\n    if (from && to) {\n        const isRangeInverted = differenceInCalendarDays(to, from) < 0;\n        if (isRangeInverted) {\n            [from, to] = [to, from];\n        }\n        const isInRange = differenceInCalendarDays(date, from) >= (excludeEnds ? 1 : 0) &&\n            differenceInCalendarDays(to, date) >= (excludeEnds ? 1 : 0);\n        return isInRange;\n    }\n    if (!excludeEnds && to) {\n        return isSameDay(to, date);\n    }\n    if (!excludeEnds && from) {\n        return isSameDay(from, date);\n    }\n    return false;\n}\n/**\n * @private\n * @deprecated Use {@link rangeIncludesDate} instead.\n */\nexport const isDateInRange = (range, date) => rangeIncludesDate(range, date, false, defaultDateLib);\n//# sourceMappingURL=rangeIncludesDate.js.map"],"mappings":"AAAA,SAASA,cAAc,QAAQ,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAACC,KAAK,EAAEC,IAAI,EAC7C;AACAC,WAAW,GAAG,KAAK,EAAEC,OAAO,GAAGL,cAAc,EAAE;EAC3C,IAAI;IAAEM,IAAI;IAAEC;EAAG,CAAC,GAAGL,KAAK;EACxB,MAAM;IAAEM,wBAAwB;IAAEC;EAAU,CAAC,GAAGJ,OAAO;EACvD,IAAIC,IAAI,IAAIC,EAAE,EAAE;IACZ,MAAMG,eAAe,GAAGF,wBAAwB,CAACD,EAAE,EAAED,IAAI,CAAC,GAAG,CAAC;IAC9D,IAAII,eAAe,EAAE;MACjB,CAACJ,IAAI,EAAEC,EAAE,CAAC,GAAG,CAACA,EAAE,EAAED,IAAI,CAAC;IAC3B;IACA,MAAMK,SAAS,GAAGH,wBAAwB,CAACL,IAAI,EAAEG,IAAI,CAAC,KAAKF,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,IAC3EI,wBAAwB,CAACD,EAAE,EAAEJ,IAAI,CAAC,KAAKC,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/D,OAAOO,SAAS;EACpB;EACA,IAAI,CAACP,WAAW,IAAIG,EAAE,EAAE;IACpB,OAAOE,SAAS,CAACF,EAAE,EAAEJ,IAAI,CAAC;EAC9B;EACA,IAAI,CAACC,WAAW,IAAIE,IAAI,EAAE;IACtB,OAAOG,SAAS,CAACH,IAAI,EAAEH,IAAI,CAAC;EAChC;EACA,OAAO,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMS,aAAa,GAAGA,CAACV,KAAK,EAAEC,IAAI,KAAKF,iBAAiB,CAACC,KAAK,EAAEC,IAAI,EAAE,KAAK,EAAEH,cAAc,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}