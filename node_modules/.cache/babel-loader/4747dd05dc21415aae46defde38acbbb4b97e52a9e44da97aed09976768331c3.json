{"ast":null,"code":"import { createContext, useContext } from \"react\";\n/** @ignore */\nexport const dayPickerContext = createContext(undefined);\n/**\n * Returns the context to work with `<DayPicker />` inside custom components.\n *\n * This hook provides access to the DayPicker context, which includes various\n * properties and methods to interact with the DayPicker component. It must be\n * used within a custom component.\n *\n * @template T - Use this type to refine the returned context type with a\n *   specific selection mode.\n * @returns {DayPickerContext<T>} The context to work with DayPicker.\n * @throws {Error} If the hook is used outside of a DayPicker provider.\n * @group Hooks\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function useDayPicker() {\n  const context = useContext(dayPickerContext);\n  if (context === undefined) {\n    throw new Error(\"useDayPicker() must be used within a custom component.\");\n  }\n  return context;\n}","map":{"version":3,"names":["createContext","useContext","dayPickerContext","undefined","useDayPicker","context","Error"],"sources":["C:/Users/JOSEPH/Desktop/web/node_modules/react-day-picker/dist/esm/useDayPicker.js"],"sourcesContent":["import { createContext, useContext } from \"react\";\n/** @ignore */\nexport const dayPickerContext = createContext(undefined);\n/**\n * Returns the context to work with `<DayPicker />` inside custom components.\n *\n * This hook provides access to the DayPicker context, which includes various\n * properties and methods to interact with the DayPicker component. It must be\n * used within a custom component.\n *\n * @template T - Use this type to refine the returned context type with a\n *   specific selection mode.\n * @returns {DayPickerContext<T>} The context to work with DayPicker.\n * @throws {Error} If the hook is used outside of a DayPicker provider.\n * @group Hooks\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function useDayPicker() {\n    const context = useContext(dayPickerContext);\n    if (context === undefined) {\n        throw new Error(\"useDayPicker() must be used within a custom component.\");\n    }\n    return context;\n}\n//# sourceMappingURL=useDayPicker.js.map"],"mappings":"AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACjD;AACA,OAAO,MAAMC,gBAAgB,GAAGF,aAAa,CAACG,SAAS,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAAA,EAAG;EAC3B,MAAMC,OAAO,GAAGJ,UAAU,CAACC,gBAAgB,CAAC;EAC5C,IAAIG,OAAO,KAAKF,SAAS,EAAE;IACvB,MAAM,IAAIG,KAAK,CAAC,wDAAwD,CAAC;EAC7E;EACA,OAAOD,OAAO;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}