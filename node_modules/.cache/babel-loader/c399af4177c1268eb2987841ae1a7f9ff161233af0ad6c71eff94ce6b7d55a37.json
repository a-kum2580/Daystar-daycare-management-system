{"ast":null,"code":"import { CalendarDay } from \"../classes/index.js\";\nimport { dateMatchModifiers } from \"../utils/dateMatchModifiers.js\";\nimport { getFocusableDate } from \"./getFocusableDate.js\";\nexport function getNextFocus(moveBy, moveDir, /** The date that is currently focused. */\nrefDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt = 0) {\n  if (attempt > 365) {\n    // Limit the recursion to 365 attempts\n    return undefined;\n  }\n  const focusableDate = getFocusableDate(moveBy, moveDir, refDay.date,\n  // should be refDay? or refDay.date?\n  calendarStartMonth, calendarEndMonth, props, dateLib);\n  const isDisabled = Boolean(props.disabled && dateMatchModifiers(focusableDate, props.disabled, dateLib));\n  const isHidden = Boolean(props.hidden && dateMatchModifiers(focusableDate, props.hidden, dateLib));\n  const targetMonth = focusableDate;\n  const focusDay = new CalendarDay(focusableDate, targetMonth, dateLib);\n  if (!isDisabled && !isHidden) {\n    return focusDay;\n  }\n  // Recursively attempt to find the next focusable date\n  return getNextFocus(moveBy, moveDir, focusDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt + 1);\n}","map":{"version":3,"names":["CalendarDay","dateMatchModifiers","getFocusableDate","getNextFocus","moveBy","moveDir","refDay","calendarStartMonth","calendarEndMonth","props","dateLib","attempt","undefined","focusableDate","date","isDisabled","Boolean","disabled","isHidden","hidden","targetMonth","focusDay"],"sources":["C:\\Users\\JOSEPH\\Desktop\\web\\node_modules\\react-day-picker\\src\\helpers\\getNextFocus.tsx"],"sourcesContent":["import type { DateLib } from \"../classes/DateLib.js\";\nimport { CalendarDay } from \"../classes/index.js\";\nimport type {\n  DayPickerProps,\n  MoveFocusBy,\n  MoveFocusDir\n} from \"../types/index.js\";\nimport { dateMatchModifiers } from \"../utils/dateMatchModifiers.js\";\n\nimport { getFocusableDate } from \"./getFocusableDate.js\";\n\nexport function getNextFocus(\n  moveBy: MoveFocusBy,\n  moveDir: MoveFocusDir,\n  /** The date that is currently focused. */\n  refDay: CalendarDay,\n  calendarStartMonth: Date | undefined,\n  calendarEndMonth: Date | undefined,\n  props: Pick<\n    DayPickerProps,\n    \"disabled\" | \"hidden\" | \"modifiers\" | \"ISOWeek\" | \"timeZone\"\n  >,\n  dateLib: DateLib,\n  attempt: number = 0\n): CalendarDay | undefined {\n  if (attempt > 365) {\n    // Limit the recursion to 365 attempts\n    return undefined;\n  }\n\n  const focusableDate = getFocusableDate(\n    moveBy,\n    moveDir,\n    refDay.date, // should be refDay? or refDay.date?\n    calendarStartMonth,\n    calendarEndMonth,\n    props,\n    dateLib\n  );\n\n  const isDisabled = Boolean(\n    props.disabled && dateMatchModifiers(focusableDate, props.disabled, dateLib)\n  );\n\n  const isHidden = Boolean(\n    props.hidden && dateMatchModifiers(focusableDate, props.hidden, dateLib)\n  );\n\n  const targetMonth = focusableDate;\n  const focusDay = new CalendarDay(focusableDate, targetMonth, dateLib);\n\n  if (!isDisabled && !isHidden) {\n    return focusDay;\n  }\n\n  // Recursively attempt to find the next focusable date\n  return getNextFocus(\n    moveBy,\n    moveDir,\n    focusDay,\n    calendarStartMonth,\n    calendarEndMonth,\n    props,\n    dateLib,\n    attempt + 1\n  );\n}\n"],"mappings":"AACA,SAASA,WAAW,QAAQ,qBAAqB;AAMjD,SAASC,kBAAkB,QAAQ,gCAAgC;AAEnE,SAASC,gBAAgB,QAAQ,uBAAuB;AAExD,OAAM,SAAUC,YAAYA,CAC1BC,MAAmB,EACnBC,OAAqB,EACrB;AACAC,MAAmB,EACnBC,kBAAoC,EACpCC,gBAAkC,EAClCC,KAGC,EACDC,OAAgB,EAChBC,OAAA,GAAkB,CAAC;EAEnB,IAAIA,OAAO,GAAG,GAAG,EAAE;IACjB;IACA,OAAOC,SAAS;EAClB;EAEA,MAAMC,aAAa,GAAGX,gBAAgB,CACpCE,MAAM,EACNC,OAAO,EACPC,MAAM,CAACQ,IAAI;EAAE;EACbP,kBAAkB,EAClBC,gBAAgB,EAChBC,KAAK,EACLC,OAAO,CACR;EAED,MAAMK,UAAU,GAAGC,OAAO,CACxBP,KAAK,CAACQ,QAAQ,IAAIhB,kBAAkB,CAACY,aAAa,EAAEJ,KAAK,CAACQ,QAAQ,EAAEP,OAAO,CAAC,CAC7E;EAED,MAAMQ,QAAQ,GAAGF,OAAO,CACtBP,KAAK,CAACU,MAAM,IAAIlB,kBAAkB,CAACY,aAAa,EAAEJ,KAAK,CAACU,MAAM,EAAET,OAAO,CAAC,CACzE;EAED,MAAMU,WAAW,GAAGP,aAAa;EACjC,MAAMQ,QAAQ,GAAG,IAAIrB,WAAW,CAACa,aAAa,EAAEO,WAAW,EAAEV,OAAO,CAAC;EAErE,IAAI,CAACK,UAAU,IAAI,CAACG,QAAQ,EAAE;IAC5B,OAAOG,QAAQ;EACjB;EAEA;EACA,OAAOlB,YAAY,CACjBC,MAAM,EACNC,OAAO,EACPgB,QAAQ,EACRd,kBAAkB,EAClBC,gBAAgB,EAChBC,KAAK,EACLC,OAAO,EACPC,OAAO,GAAG,CAAC,CACZ;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}