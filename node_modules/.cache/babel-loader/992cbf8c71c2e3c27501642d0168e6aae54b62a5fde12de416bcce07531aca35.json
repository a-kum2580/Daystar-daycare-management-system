{"ast":null,"code":"/**\n * Returns true if `matcher` is of type {@link DateInterval}.\n *\n * @group Utilities\n */\nexport function isDateInterval(matcher) {\n  return Boolean(matcher && typeof matcher === \"object\" && \"before\" in matcher && \"after\" in matcher);\n}\n/**\n * Returns true if `value` is a {@link DateRange} type.\n *\n * @group Utilities\n */\nexport function isDateRange(value) {\n  return Boolean(value && typeof value === \"object\" && \"from\" in value);\n}\n/**\n * Returns true if `value` is of type {@link DateAfter}.\n *\n * @group Utilities\n */\nexport function isDateAfterType(value) {\n  return Boolean(value && typeof value === \"object\" && \"after\" in value);\n}\n/**\n * Returns true if `value` is of type {@link DateBefore}.\n *\n * @group Utilities\n */\nexport function isDateBeforeType(value) {\n  return Boolean(value && typeof value === \"object\" && \"before\" in value);\n}\n/**\n * Returns true if `value` is a {@link DayOfWeek} type.\n *\n * @group Utilities\n */\nexport function isDayOfWeekType(value) {\n  return Boolean(value && typeof value === \"object\" && \"dayOfWeek\" in value);\n}\n/**\n * Returns true if `value` is an array of valid dates.\n *\n * @private\n */\nexport function isDatesArray(value, dateLib) {\n  return Array.isArray(value) && value.every(dateLib.isDate);\n}","map":{"version":3,"names":["isDateInterval","matcher","Boolean","isDateRange","value","isDateAfterType","isDateBeforeType","isDayOfWeekType","isDatesArray","dateLib","Array","isArray","every","isDate"],"sources":["C:/Users/JOSEPH/Desktop/web/node_modules/react-day-picker/dist/esm/utils/typeguards.js"],"sourcesContent":["/**\n * Returns true if `matcher` is of type {@link DateInterval}.\n *\n * @group Utilities\n */\nexport function isDateInterval(matcher) {\n    return Boolean(matcher &&\n        typeof matcher === \"object\" &&\n        \"before\" in matcher &&\n        \"after\" in matcher);\n}\n/**\n * Returns true if `value` is a {@link DateRange} type.\n *\n * @group Utilities\n */\nexport function isDateRange(value) {\n    return Boolean(value && typeof value === \"object\" && \"from\" in value);\n}\n/**\n * Returns true if `value` is of type {@link DateAfter}.\n *\n * @group Utilities\n */\nexport function isDateAfterType(value) {\n    return Boolean(value && typeof value === \"object\" && \"after\" in value);\n}\n/**\n * Returns true if `value` is of type {@link DateBefore}.\n *\n * @group Utilities\n */\nexport function isDateBeforeType(value) {\n    return Boolean(value && typeof value === \"object\" && \"before\" in value);\n}\n/**\n * Returns true if `value` is a {@link DayOfWeek} type.\n *\n * @group Utilities\n */\nexport function isDayOfWeekType(value) {\n    return Boolean(value && typeof value === \"object\" && \"dayOfWeek\" in value);\n}\n/**\n * Returns true if `value` is an array of valid dates.\n *\n * @private\n */\nexport function isDatesArray(value, dateLib) {\n    return Array.isArray(value) && value.every(dateLib.isDate);\n}\n//# sourceMappingURL=typeguards.js.map"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,cAAcA,CAACC,OAAO,EAAE;EACpC,OAAOC,OAAO,CAACD,OAAO,IAClB,OAAOA,OAAO,KAAK,QAAQ,IAC3B,QAAQ,IAAIA,OAAO,IACnB,OAAO,IAAIA,OAAO,CAAC;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,WAAWA,CAACC,KAAK,EAAE;EAC/B,OAAOF,OAAO,CAACE,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,MAAM,IAAIA,KAAK,CAAC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACD,KAAK,EAAE;EACnC,OAAOF,OAAO,CAACE,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAO,IAAIA,KAAK,CAAC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,gBAAgBA,CAACF,KAAK,EAAE;EACpC,OAAOF,OAAO,CAACE,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,QAAQ,IAAIA,KAAK,CAAC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,eAAeA,CAACH,KAAK,EAAE;EACnC,OAAOF,OAAO,CAACE,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,WAAW,IAAIA,KAAK,CAAC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,YAAYA,CAACJ,KAAK,EAAEK,OAAO,EAAE;EACzC,OAAOC,KAAK,CAACC,OAAO,CAACP,KAAK,CAAC,IAAIA,KAAK,CAACQ,KAAK,CAACH,OAAO,CAACI,MAAM,CAAC;AAC9D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}